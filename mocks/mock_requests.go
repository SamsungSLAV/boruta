// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/SamsungSLAV/boruta (interfaces: Requests)

// Package mocks is a generated GoMock package.
package mocks

import (
	boruta "github.com/SamsungSLAV/boruta"
	gomock "github.com/golang/mock/gomock"
	reflect "reflect"
	time "time"
)

// MockRequests is a mock of Requests interface
type MockRequests struct {
	ctrl     *gomock.Controller
	recorder *MockRequestsMockRecorder
}

// MockRequestsMockRecorder is the mock recorder for MockRequests
type MockRequestsMockRecorder struct {
	mock *MockRequests
}

// NewMockRequests creates a new mock instance
func NewMockRequests(ctrl *gomock.Controller) *MockRequests {
	mock := &MockRequests{ctrl: ctrl}
	mock.recorder = &MockRequestsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockRequests) EXPECT() *MockRequestsMockRecorder {
	return m.recorder
}

// AcquireWorker mocks base method
func (m *MockRequests) AcquireWorker(arg0 boruta.ReqID) (boruta.AccessInfo, error) {
	ret := m.ctrl.Call(m, "AcquireWorker", arg0)
	ret0, _ := ret[0].(boruta.AccessInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AcquireWorker indicates an expected call of AcquireWorker
func (mr *MockRequestsMockRecorder) AcquireWorker(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AcquireWorker", reflect.TypeOf((*MockRequests)(nil).AcquireWorker), arg0)
}

// CloseRequest mocks base method
func (m *MockRequests) CloseRequest(arg0 boruta.ReqID) error {
	ret := m.ctrl.Call(m, "CloseRequest", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CloseRequest indicates an expected call of CloseRequest
func (mr *MockRequestsMockRecorder) CloseRequest(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CloseRequest", reflect.TypeOf((*MockRequests)(nil).CloseRequest), arg0)
}

// GetRequestInfo mocks base method
func (m *MockRequests) GetRequestInfo(arg0 boruta.ReqID) (boruta.ReqInfo, error) {
	ret := m.ctrl.Call(m, "GetRequestInfo", arg0)
	ret0, _ := ret[0].(boruta.ReqInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetRequestInfo indicates an expected call of GetRequestInfo
func (mr *MockRequestsMockRecorder) GetRequestInfo(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetRequestInfo", reflect.TypeOf((*MockRequests)(nil).GetRequestInfo), arg0)
}

// ListRequests mocks base method
func (m *MockRequests) ListRequests(arg0 boruta.ListFilter) ([]boruta.ReqInfo, error) {
	ret := m.ctrl.Call(m, "ListRequests", arg0)
	ret0, _ := ret[0].([]boruta.ReqInfo)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListRequests indicates an expected call of ListRequests
func (mr *MockRequestsMockRecorder) ListRequests(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListRequests", reflect.TypeOf((*MockRequests)(nil).ListRequests), arg0)
}

// NewRequest mocks base method
func (m *MockRequests) NewRequest(arg0 boruta.Capabilities, arg1 boruta.Priority, arg2 boruta.UserInfo, arg3, arg4 time.Time) (boruta.ReqID, error) {
	ret := m.ctrl.Call(m, "NewRequest", arg0, arg1, arg2, arg3, arg4)
	ret0, _ := ret[0].(boruta.ReqID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// NewRequest indicates an expected call of NewRequest
func (mr *MockRequestsMockRecorder) NewRequest(arg0, arg1, arg2, arg3, arg4 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "NewRequest", reflect.TypeOf((*MockRequests)(nil).NewRequest), arg0, arg1, arg2, arg3, arg4)
}

// ProlongAccess mocks base method
func (m *MockRequests) ProlongAccess(arg0 boruta.ReqID) error {
	ret := m.ctrl.Call(m, "ProlongAccess", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ProlongAccess indicates an expected call of ProlongAccess
func (mr *MockRequestsMockRecorder) ProlongAccess(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ProlongAccess", reflect.TypeOf((*MockRequests)(nil).ProlongAccess), arg0)
}

// UpdateRequest mocks base method
func (m *MockRequests) UpdateRequest(arg0 *boruta.ReqInfo) error {
	ret := m.ctrl.Call(m, "UpdateRequest", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// UpdateRequest indicates an expected call of UpdateRequest
func (mr *MockRequestsMockRecorder) UpdateRequest(arg0 interface{}) *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "UpdateRequest", reflect.TypeOf((*MockRequests)(nil).UpdateRequest), arg0)
}
